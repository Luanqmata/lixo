apropos
man para chamar o terminal de determinado programa , mostra todas as funcoes daquele comando , ex: MAN ls , man mkdir
mkdir Criar diretorios , pasta etc 
                                                                                                                                                          site que explica comandos : ​explainshell (foda dms)
Comandos.
          clear pra limpar  
          apropos
          man = manual 
          ls mostra os documentos 
          ls -l em forma de lista 
          ls -h
          ls -lh
          if config (MANUAL)

GREP = https://tecnoblog.net/responde/grep-tutorial-linux-codigo/

      grep if condif 10. 
        | =  buscar em varios arquivos , e mandar para outro lugar 

    TOUCH arquivo{1,2,3} criar arquivos 
    touch documento{1..20}.txt

    pdw imprime onde vc esta

    cat documento | grep luan / busca dentro da pasta o nome luan e imprime  
    cd entra em diretorios 
    cd .. volta diretorio 
    cd ~ (volta pro home)
    cd - (volta pro diretorio q vc estava antes )
    ex: cd desktop/documentos/luan 
  
_________________
nano , editor de arquivo , editar arquivo , editar codigos 

    find = busca qualquer coisa   (man find ) mostra o manual
    wc = conta linhas 
    wc -l mostra em lista 
    cp = copiar 
          cp documentos nome_pasta_nova
    mv move ariquivo pra outro destino , e renomeia arquivo 
____________________________
      comandos.  

apropos
man
cat
ls
ls -l
ls -h
ls -lh
grep
touch
nano
cd
cd ..
cd -
cd ~
<TAB>
find ./ -name "docu*"
wc

ssh  para entrar em servidores 
________________________________

sudo su 'entrar como super user'
type 'mostra o tipo do comando'
cler "limpar"
echo " buscar e mostra oq tem dentro da variavel "
pwd "se localizar"
./ " tem q esta dentro do diretorio , voce consegue executar oq esta dentro do script"
$ "sem o sifrão ele imprime na tela , com o cifão ele mostra o caminhoi"
$path "elee procura em cada diretorio onde o programa esta e vai separando.'
exit 'quando vc usa 2 bash e vc sai de um e vai para o outro'
export 'exportar uma variavel , mostrar ela em global'
cat ' para ver dentro do editor'
cd .. 'voltar diretorio'
todo arquivo oculto tem um ponto antes .nome do arquivo
ls -a "lista os arq ocultos"
mkdir 'cria pastas'
echo $SHELL 'mostra a bin / bash'
history 'comamando q mostra o historico de navegação'
nano 'para modificar arq'
CRIA UAM VAR = COISA.
como mandar de um bash pro  outro = 'export NOME_VARIAVEL' 
como apagar o historico 'hystory -c'

quando o script ta verde é porque vc tem permissao pra executar , quando ta branco nao tem permissão 

____________________________________________________________________________________________________________
	aula antes do simualdo

sleep e um numero = inicia um jobs ,  crtl +z  cancela o jobs
chamar os jobs = jobs 
listar os jobs = jobs -l , jobs-p ,jobs -n
fg %1 = 'levar o jobs pro primeiro plano , e s tonrna o jobs atual' para encerrar 'ctrl + z' , para pausar ' crtl+c'
bg %1 = 'joga o jobs pro segundo plano' 
'&' =  significa que foi pro segundo plano , pode colocar no final ex: slee 100 & 'joga pro segundo plano'
kill %2 = encerra todos os segundos processor , se fosse kill %1 = 'seria todos os processos de primerio plano'
___________________________________________________________________

para ver as partições = ' ls bvk '
___________________________________________________________________
						aula 13
 saber fazer a leitura de uma linha de codigo quando vc da uma ls -l -a , ls -la
1 = x
2 = w
3 = wx
4 = r
5 = rx
6 = rw
7 = rwx
________________________________________AULA 14___________________________

ele é dividido em 0 a 7, 1 2 4 ;( o octal);

leitura = 4
escrita/gravação = 2 
execução = 1

criar group = 'sudo groupadd alunos'
deletar grup = 'sudo groupdel alunos '
mudar nome do gp = 'sudo groupmod -n alunos1 alunos' 	
---------------------------------------------------------------
criar usuario = 'sudo adduser 'nome user''
deletar user = 'sudo deluser 'nome user''
----------------------------------------------------------------
adicionar o user dentro do gp = 'sudo adduser 'nome usuario' 'nom do gp' '
exemplo = 'sudo adduser luan grupo_da_droga '

remove o user dentro do gp = 'sudo deluser 'nome usuario' 'nom do gp' '
exemplo = 'sudo deluser luan grupo_da_droga '
===============================================================
Para listar todos os usuarios que existe na maquina 
cut -d: -f1 /etc/passwd
Para listar todos os GRUOPS que existe na maquina 
cut -d: -f1 /etc/group
----------------------------
para trocar de usuario = ' su nome_do_usuario ' 
----------------------------
parar listar o user de uma grup = groups 'nome do user'
exemplo = groups luan
---------------------------
criar arquivo = touch nome_do_arquivo
dar permisão = 'chmod 744 teste.txt' todas permissão

_____________________________________ARRUMAR SOURC LIST_________________________________
 
cd /etc/apt

nano sources.list

deb http://deb.debian.org/debian/ bookworm main contrib non-free non-free-firmware
deb-src http://deb.debian.org/debian/ bookworm main contrib non-free non-free-firmware

deb http://deb.debian.org/debian/ bookworm-updates main contrib non-free non-free-firmware
deb-src http://deb.debian.org/debian/ bookworm-updates main contrib non-free non-free-firmware

deb http://security.debian.org/debian-security/ bookworm-security main contrib non-free non-free-firmware
__________________________________________AULA 15________________________________________________
GUI = interface grafica
TERMINAIS=  xterm = temrinal mais simples preto e branco , terminal XFCE = terminal que tem ediçoes ,mudar fontes, aumentar fontes, colorido
acessar telas de loguin diferentes = comandos de navegação de menu de loguin (crtl + alt + f1 ~ f6)
			
				BASH
bash -l OU bash - -loguin = invoca um shell de loguin
bash interativo = bash -i
bash - -noprofile = ignora o arq de inicialização 
bash - -norc = 
bash - -rcfile = 

descobrir o tipo/nome de shel da maquina = echo $0

decobrir quantos shels nos temos grep | 

-----------------------------------------------
		comandos da aula
mkdir aula15
touch ola_mundo.sh
nano ola_mundo.sh == escrever 'olha mundo' e salvar . #!/bin/bash == comando para 
dar permissao pra exercutar o script == chmod +x (nome do arquivo) 'TODOS'

revisão So Weverson

Encontrar arquivos de SUID:
sudo find /usr/bin -perm -4000  simbolico --> sudo find /usr/bin -perm -u+s

Econtrar arquivos de SGID:
sudo find /usr/bin -perm -2000 
------------------------------------------------
comando:	passwd -S (status)
		professor P 2024-02-26 0 99999 7 -1

professor = user
P=(existe uma senha) , NP (sem senha), L (senha bloqueada)

2024-02-26 = ultima alteração da senha

0 = numero minimo de dias de mudanças de senha 

9999 = tempo que vc escolhe para deixar aquela senha ativa

7 = o aviso , o numero de dias antes da senha expirar

BLOQUEAR SENHA DO USUARIO = sudo usermod professor --lock , depois passwd -S (mostra bloqueado)

Desbloquear senha do user = sudo usermod professor --unlock ,depois passwd -S (mostra bloqueado)
---------------------------------------------------
Descobrir portas abertas:

nmap localhost:

_________________
permissao pra arquivo: são separados por 3 gp : user , grupos , outros
  --- = 000 = 0

/ rwx = 111 = 7 / 
/ rw- = 110 = 6 /
/ r-x = 101 = 5 /
/ r-- = 100 = 4 /
/ -wx = 011 = 3 /
/ -w- = 010 = 2 /
/ --x = 001 = 1 /

dar permissoes a gps especificos: 

users: chmod u+r nome_arquivo --> 400 
grup: chmod g+r nome_arquivo --> 040
outros: chmod o+rwx nome_arq --> 004
todos : chmod ugo+rwx nome_arq  --> chmod 777 nome_Arq

da permissao de x : chmod +x nomedoarq --> chmod 111 nome arq 
tirar permissao de x : chmod -x nomedoarq --> chmod 000	nome arq
