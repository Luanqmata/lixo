Colinha monstra SQL

alter table { 

coisas que pode fazer : 

1. mudar um tipo de dado da coluna = 
{   ALTER TABLE nome_da_tabela
    ALTER COLUMN nome_da_coluna TYPE novo_tipo_de_dado;
OU
ALTER TABLE nome_da_tabela
MODIFY COLUMN nome_da_coluna novo_tipo_de_dado; 
		numerico
ALTER TABLE nome_da_tabela
MODIFY COLUMN nome_da_coluna NUMERIC(20);
OU
ALTER TABLE nome_da_tabela
ALTER COLUMN nome_da_coluna TYPE NUMERIC(20);

}

{   ALTER TABLE nome_da_tabela
    ALTER COLUMN email TYPE TEXT;
OU
ALTER TABLE nome_da_tabela
MODIFY COLUMN email VARCHAR(100); }
2. mudando nome da tabela=
ALTER TABLE atletas
RENAME TO atletas2024;

3. deletar uma coluna = 
ALTER TABLE nome_da_tabela
DROP COLUMN email;

4. criar uma coluna = 
ALTER TABLE nome_da_tabela
ADD COLUMN email VARCHAR(50);


5. renomear uma coluna = 
ALTER TABLE nome_da_tabela
RENAME COLUMN nome_atual_para nome_novo;
OU
ALTER TABLE nome_da_tabela
RENAME COLUMN email TO contato_email;

6. adicionar restrição =
ALTER TABLE nome_da_tabela
ALTER COLUMN email SET NOT NULL;
para~~
ALTER TABLE nome_da_tabela
ADD CONSTRAINT unique_email UNIQUE (email);

7. remover uma restrição =
remover uma constraint unica:
ALTER TABLE nome_da_tabela
DROP CONSTRAINT unique_email;  (mais usado)

remover um notnull = 
ALTER TABLE nome_da_tabela
ALTER COLUMN email DROP NOT NULL;

8. ADICIONANDO NOT NULL EM UMA COLUNDA DA TABELA = 
ALTER TABLE nome_da_tabela
ALTER COLUMN nome_da_coluna SET NOT NULL;




--------------FK----------------
adicionando chave primaria:
CREATE TABLE nome_da_tabela (
    id SERIAL PRIMARY KEY,  (talvez n precise do serial)
    nome VARCHAR(100)
);

ADICIONANDO CHAVE ESTRANGEIRA (3° RELAÇÃO DO BD VARIOS PARA VARIOS):
-- Criação da tabela de clientes
CREATE TABLE clientes (
    id SERIAL PRIMARY KEY,
    nome VARCHAR(100) NOT NULL
);

-- Criação da tabela de produtos
CREATE TABLE produtos (
    id SERIAL PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    preco NUMERIC(10, 2) NOT NULL
);

-- Criação da tabela de pedidos
CREATE TABLE pedidos (
    id SERIAL PRIMARY KEY,
    cliente_id INTEGER NOT NULL,
    data_pedido DATE NOT NULL,
    FOREIGN KEY (cliente_id) REFERENCES clientes(id)
);

-- Criação da tabela de itens_pedido para o relacionamento muitos-para-muitos
CREATE TABLE itens_pedido (
    pedido_id INTEGER NOT NULL,
    produto_id INTEGER NOT NULL,
    quantidade INTEGER NOT NULL,
    PRIMARY KEY (pedido_id, produto_id),
    FOREIGN KEY (pedido_id) REFERENCES pedidos(id),
    FOREIGN KEY (produto_id) REFERENCES produtos(id)
);

}
